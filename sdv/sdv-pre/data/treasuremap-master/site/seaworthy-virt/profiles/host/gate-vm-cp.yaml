---
schema: drydock/HostProfile/v1
metadata:
  schema: metadata/Document/v1
  name: cp-global
  replacement: true
  layeringDefinition:
    abstract: false
    layer: site
    parentSelector:
      hosttype: cp-global
    actions:
      - method: replace
        path: .storage
      - method: replace
        path: .interfaces
      - method: replace
        path: .platform.kernel_params
      - method: merge
        path: .
  storagePolicy: cleartext
data:
  hardware_profile: 'GenericVM'
  primary_network: 'gp'
  oob:
    type: 'libvirt'
    libvirt_uri: 'qemu+ssh://virtmgr@172.24.1.1/system'
  storage:
    physical_devices:
      vda:
        labels:
          bootdrive: 'true'
        partitions:
          - name: 'root'
            size: '20g'
            bootable: true
            filesystem:
              mountpoint: '/'
              fstype: 'ext4'
              mount_options: 'defaults'
          - name: 'boot'
            size: '1g'
            filesystem:
              mountpoint: '/boot'
              fstype: 'ext4'
              mount_options: 'defaults'
  interfaces:
    ens3:
      device_link: 'gp'
      slaves:
        - 'ens3'
      networks:
        - 'gp'
  platform:
    kernel_params:
      kernel_package: 'linux-image-4.15.0-34-generic'
...
---
schema: drydock/HostProfile/v1
metadata:
  schema: metadata/Document/v1
  name: cp-secondary
  layeringDefinition:
    abstract: false
    layer: site
    parentSelector:
      hosttype: cp-global
    actions:
      - method: replace
        path: .storage
      - method: replace
        path: .interfaces
      - method: replace
        path: .platform.kernel_params
      - method: merge
        path: .
  storagePolicy: cleartext
data:
  hardware_profile: 'GenericVM'
  primary_network: 'gp'
  oob:
    type: 'libvirt'
    libvirt_uri: 'qemu+ssh://virtmgr@172.24.1.1/system'
  storage:
    physical_devices:
      vda:
        labels:
          bootdrive: 'true'
        partitions:
          - name: 'root'
            size: '20g'
            bootable: true
            filesystem:
              mountpoint: '/'
              fstype: 'ext4'
              mount_options: 'defaults'
          - name: 'boot'
            size: '1g'
            filesystem:
              mountpoint: '/boot'
              fstype: 'ext4'
              mount_options: 'defaults'
  interfaces:
    ens3:
      device_link: 'gp'
      slaves:
        - 'ens3'
      networks:
        - 'gp'
  platform:
    kernel_params:
      kernel_package: 'linux-image-4.15.0-34-generic'

  metadata:
    owner_data:
      control-plane: enabled
      ucp-control-plane: enabled
      openstack-control-plane: enabled
      openstack-heat: enabled
      openstack-keystone: enabled
      openstack-rabbitmq: enabled
      openstack-dns-helper: enabled
      openstack-mariadb: enabled
      openstack-nova-control: enabled
      # openstack-etcd: enabled
      openstack-mistral: enabled
      openstack-memcached: enabled
      openstack-glance: enabled
      openstack-horizon: enabled
      openstack-cinder-control: enabled
      openstack-cinder-volume: control
      openstack-neutron: enabled
      openvswitch: enabled
      ucp-barbican: enabled
      # ceph-mon: enabled
      ceph-mgr: enabled
      ceph-osd: enabled
      ceph-mds: enabled
      ceph-rgw: enabled
      ucp-maas: enabled
      kube-dns: enabled
      tenant-ceph-control-plane: enabled
      # tenant-ceph-mon: enabled
      tenant-ceph-rgw: enabled
      tenant-ceph-mgr: enabled
      kubernetes-apiserver: enabled
      kubernetes-controller-manager: enabled
      # kubernetes-etcd: enabled
      kubernetes-scheduler: enabled
      tiller-helm: enabled
      # kube-etcd: enabled
      calico-policy: enabled
      calico-node: enabled
      # calico-etcd: enabled
      ucp-armada: enabled
      ucp-drydock: enabled
      ucp-deckhand: enabled
      ucp-shipyard: enabled
      IAM: enabled
      ucp-promenade: enabled
      prometheus-server: enabled
      prometheus-client: enabled
      fluentd: enabled
      influxdb: enabled
      kibana: enabled
      elasticsearch-client: enabled
      elasticsearch-master: enabled
      elasticsearch-data: enabled
      postgresql: enabled
      kube-ingress: enabled
      beta.kubernetes.io/fluentd-ds-ready: 'true'
      node-exporter: enabled
...
