---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: neutron-global
  labels:
    name: neutron-global
    component: neutron
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.neutron
      dest:
        path: .source

    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.osh.neutron
      dest:
        path: .values.images.tags

    # Endpoints
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.identity
      dest:
        path: .values.endpoints.identity
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.compute
      dest:
        path: .values.endpoints.compute
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.compute_metadata
      dest:
        path: .values.endpoints.image_registry
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_db
      dest:
        path: .values.endpoints.oslo_db
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_messaging
      dest:
        path: .values.endpoints.oslo_messaging
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_cache
      dest:
        path: .values.endpoints.oslo_cache
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.network
      dest:
        path: .values.endpoints.network
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_infra_endpoints
        path: .osh_infra.fluentd
      dest:
        path: .values.endpoints.fluentd
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.keystone.admin
      dest:
        path: .values.endpoints.identity.auth.admin
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.neutron.neutron
      dest:
        path: .values.endpoints.identity.auth.neutron
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.nova.nova
      dest:
        path: .values.endpoints.identity.auth.nova
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.oslo_messaging.admin
      dest:
        path: .values.endpoints.oslo_messaging.auth.admin
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.neutron.oslo_messaging.neutron
      dest:
        path: .values.endpoints.oslo_messaging.auth.neutron
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.neutron.oslo_db
      dest:
        path: .values.endpoints.oslo_db.auth.neutron
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.neutron.oslo_db.database
      dest:
        path: .values.endpoints.oslo_db.path
        pattern: DB_NAME
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.network.name
      dest:
        path: .values.endpoints.oslo_messaging.path
        pattern: VHOST_NAME

    # Secrets
    - dest:
        path: .values.endpoints.identity.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_keystone_admin_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.neutron.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_neutron_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.nova.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_nova_password
        path: .
    - dest:
        path: .values.endpoints.oslo_messaging.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_messaging_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_messaging.auth.neutron.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_messaging_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.neutron.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_neutron_oslo_db_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_db_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_cache.auth.memcache_secret_key
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_cache_secret_key
        path: .
    - dest:
        path: .values.conf.metadata_agent.DEFAULT.metadata_proxy_shared_secret
      src:
        schema: deckhand/Passphrase/v1
        name: osh_nova_metadata_proxy_shared_secret
        path: .

    # Interfaces for neutron configuration
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .neutron.tunnel_device
      dest:
        path: .values.network.interface.tunnel
        pattern: 'TUNNEL_DEVICE'
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .neutron.external_iface
      dest:
        path: .values.conf.auto_bridge_add.br-ex
        pattern: 'EXTERNAL_INTERFACE'

data:
  chart_name: neutron
  release: neutron
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            release_group: airship-neutron
    post:
      create: []
  test:
    timeout: 500
  wait:
    labels:
      release_group: airship-neutron
  values:
    pod:
      replicas:
        server: 2
    labels:
      agent:
        dhcp:
          node_selector_key: openstack-control-plane
          node_selector_value: enabled
        l3:
          # To enable the forcing of routers onto controllers that have
          # a public cidr so that tenant floating IPs can route properly
          node_selector_key: openstack-l3-agent
          node_selector_value: enabled
        metadata:
          node_selector_key: openstack-control-plane
          node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      lb:
        node_selector_key: linuxbridge
        node_selector_value: enabled
      ovs:
        node_selector_key: openvswitch
        node_selector_value: enabled
      server:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      test:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    network:
      interface:
        tunnel: 'TUNNEL_DEVICE'
    conf:
      auto_bridge_add:
        br-ex: 'EXTERNAL_INTERFACE'
      logging:
        loggers:
          keys:
            - root
            - neutron
        handlers:
          keys:
            - stdout
            - stderr
            - 'null'
            - fluent
        formatters:
          keys:
            - context
            - default
            - fluent
        logger_root:
          level: WARNING
          handlers: stdout
        logger_neutron:
          level: INFO
          handlers:
            - stdout
            - fluent
          qualname: neutron
        logger_amqp:
          level: WARNING
          handlers: stderr
          qualname: amqp
        logger_amqplib:
          level: WARNING
          handlers: stderr
          qualname: amqplib
        logger_eventletwsgi:
          level: WARNING
          handlers: stderr
          qualname: eventlet.wsgi.server
        logger_sqlalchemy:
          level: WARNING
          handlers: stderr
          qualname: sqlalchemy
        logger_boto:
          level: WARNING
          handlers: stderr
          qualname: boto
        handler_null:
          class: logging.NullHandler
          formatter: default
          args: ()
        handler_stdout:
          class: StreamHandler
          args: (sys.stdout,)
          formatter: context
        handler_stderr:
          class: StreamHandler
          args: (sys.stderr,)
          formatter: context
        handler_fluent:
          class: fluent.handler.FluentHandler
          args: ('openstack.neutron', 'fluentd-logging.osh-infra', 24224)
          formatter: fluent
        formatter_fluent:
          class: oslo_log.formatters.FluentFormatter
        formatter_context:
          class: oslo_log.formatters.ContextFormatter
        formatter_default:
          format: "%(message)s"
      neutron:
        DEFAULT:
          l3_ha: True
          max_l3_agents_per_router: 3
          l3_ha_network_type: vxlan
          dhcp_agents_per_network: 2
        oslo_messaging_rabbit:
          heartbeat_timeout_threshold: 0
      plugins:
        ml2_conf:
          ml2:
            extension_drivers: port_security
            mechanism_drivers: l2population,openvswitch
            type_drivers: vlan,flat,vxlan
            tenant_network_types: vxlan
          ml2_type_vlan:
            network_vlan_ranges: external
  dependencies:
    - neutron-htk
...
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: neutron-htk
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.neutron-htk
      dest:
        path: .source
data:
  chart_name: neutron-htk
  release: neutron-htk
  namespace: neutron-htk
  values: {}
  dependencies: []
...
